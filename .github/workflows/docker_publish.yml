# Rewrite from Multi-platform image | Docker Docs
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
name: docker_publish

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  schedule:
    - cron: "0 5 1 * *"  # 1st day of month at 5am UTC
  workflow_dispatch:

permissions:
  id-token: write
  attestations: write
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ${{ github.repository_owner }}/standalone-civitai-shortcut

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Prepare Dockerfile for CI (remove ,Z and ,z)
        run: |
          sed -i 's/,Z//g;s/,z//g' Dockerfile
        shell: bash

      - name: Prepare platform variables
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Setup docker
        id: setup
        uses: ./.github/workflows/docker-reused-setup-steps
        with:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
          tag: ${{ github.ref_name }}
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: final
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.setup.outputs.labels }}
          build-args: |
            VERSION=${{ github.ref_name }}
            RELEASE=${{ github.run_number }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ env.REGISTRY_IMAGE }}:cache
          cache-to: |
            type=registry,ref=ghcr.io/${{ env.REGISTRY_IMAGE }}:cache,mode=max
          sbom: true
          provenance: true
          outputs: |
            type=image,name=${{ secrets.DOCKERHUB_USERNAME }}/standalone-civitai-shortcut,push-by-digest=true,name-canonical=true,push=true
            type=image,name=ghcr.io/${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
            type=image,name=quay.io/${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          echo "${digest#sha256:}" > /tmp/digests/${{ env.PLATFORM_PAIR }}

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Setup docker
        id: setup
        uses: ./.github/workflows/docker-reused-setup-steps
        with:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
          tag: ${{ github.ref_name }}
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          set -euo pipefail

          # Debug: list all files in digest directory
          echo "Files in /tmp/digests:"
          ls -la

          # Collect valid SHA256 digest files
          digests=()
          for file in *; do
            if [[ -f "$file" && "$file" =~ ^[a-f0-9]{64}$ ]]; then
              digests+=("$file")
              echo "Found valid digest: $file"
            fi
          done

          if [[ ${#digests[@]} -eq 0 ]]; then
            echo "Error: No valid digests found"
            exit 1
          fi

          echo "Processing ${#digests[@]} digests: ${digests[*]}"

          for registry in ghcr.io/${{ github.repository_owner }} ${{ secrets.DOCKERHUB_USERNAME }} quay.io/${{ github.repository_owner }}; do
            tags=$(echo "${{ steps.setup.outputs.tags }}" | grep "^${registry}/" | tr '\n' ' ' || true)
            if [[ -n "$tags" ]]; then
              echo "Creating manifest for registry: $registry"
              echo "Tags: $tags"

              # Build digest references for each valid digest
              digest_refs=""
              for digest in "${digests[@]}"; do
                digest_refs+="${registry}/standalone-civitai-shortcut@sha256:${digest} "
              done

              echo "Digest references: $digest_refs"

              docker buildx imagetools create \
                $(echo "$tags" | sed 's/\S\+/-t &/g') \
                $digest_refs
            else
              echo "No tags found for registry: $registry"
            fi
          done

      - name: Attest GHCR image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/standalone-civitai-shortcut
          subject-digest: ${{ needs.build.outputs.digest }}

      - name: Attest Docker Hub image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/standalone-civitai-shortcut
          subject-digest: ${{ needs.build.outputs.digest }}

      - name: Attest Quay image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: quay.io/${{ github.repository_owner }}/standalone-civitai-shortcut
          subject-digest: ${{ needs.build.outputs.digest }}
